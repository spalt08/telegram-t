.MiddleHeader {
  display: flex;
  align-items: center;
  width: 100%;
  border-bottom: 1px solid var(--color-borders);
  background: #fff;
  padding: .5rem .8125rem .5rem 1.1875rem;

  @media (max-width: 600px) {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 3.25rem auto 7rem;
    padding: .5rem .75rem;
  }

  .chat-list-reveal-button {
    margin-left: -0.5rem;
    margin-right: 0.5rem;
    position: relative;

    @media (max-width: 600px) {
      margin-left: 0;
    }

    .unread-count {
      min-width: 1.25rem;
      height: 1.25rem;
      padding: 0 0.375rem;
      border-radius: 0.625rem;
      font-size: 0.75rem;
      line-height: 1.25rem;
      font-weight: 500;
      text-align: center;

      position: absolute;
      top: -0.25rem;
      right: -0.5rem;

      background: var(--color-gray);
      color: white;
      pointer-events: none;

      &.active {
        background: var(--color-primary);
      }

      pointer-events: none;
    }
  }

  .ChatInfo {
    cursor: pointer;
    display: flex;
    align-items: center;
  }

  .Avatar {
    margin-right: 1rem;
  }

  .title {
    display: flex;
    align-items: center;
    font-weight: 500;
    font-size: 1rem;
    line-height: 1.3125;

    .VerifiedIcon {
      width: 1.25rem;
      height: 1.25rem;
      margin-left: 0.25rem;
      margin-top: 0.05rem;
    }
  }

  .status, .typing-status {
    font-size: 0.875rem;
    line-height: 1.25rem;
    margin: 0;
    color: var(--color-text-secondary);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    &.online {
      color: var(--color-primary);
    }
  }

  .HeaderPinnedMessage-wrapper {
    display: flex;
    align-items: center;
    margin-left: auto;
    cursor: default;

    > .Button {
      flex-shrink: 0;
      margin: 0 0.25rem;
    }

    & + .HeaderActions {
      margin-left: 1rem;
    }

    @media (min-width: 1276px) and (max-width: 1500px) {
      transition: opacity var(--column-transition);

      .is-right-column-shown & {
        opacity: 0;
      }
    }

    @media (min-width: 1501px) {
      transform: translate3d(0, 0, 0);
      transition: transform var(--column-transition);

      .is-right-column-shown & {
        transform: translate3d(calc(var(--right-column-width) * -1), 0, 0);
      }
    }

    @media (max-width: 600px) {
      margin-top: 0.5rem;
      margin-left: 0;
      grid-row: 2 / 2;
      grid-column: span 3;

      > .Button {
        margin-left: 0;
      }
    }
  }

  .HeaderPinnedMessage {
    display: flex;
    flex-shrink: 1;
    padding: 0.25rem;
    padding-left: 0.375rem;
    border-radius: var(--border-radius-messages-small);
    position: relative;
    overflow: hidden;
    cursor: pointer;

    &::before {
      content: '';
      display: block;
      position: absolute;
      top: 0.25rem;
      bottom: 0.25rem;
      left: 0.25rem;
      width: 2px;
      background: var(--color-primary);
    }

    &:hover {
      background-color: rgba(var(--color-text-secondary-rgb), 0.08);
    }

    .message-text {
      overflow: hidden;
      margin-left: 0.4rem;
      max-width: 15rem;

      .title {
        font-weight: 500;
        font-size: 0.875rem;
        line-height: 1rem;
        height: 1rem;
        color: var(--color-primary);
        margin-bottom: 0.125rem;
        white-space: nowrap;
      }

      p {
        font-size: 0.875rem;
        line-height: 1.125rem;
        height: 1.125rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        margin: 0;
      }
    }

    img {
      width: 2.25rem;
      height: 2.25rem;
      object-fit: cover;
      border-radius: 0.25rem;
      margin-left: 0.4rem;
      flex-shrink: 0;

      & + .message-text {
        max-width: 12rem;
      }
    }
  }

  .HeaderActions {
    flex-shrink: 0;
    margin-left: auto;
    display: flex;
    align-items: center;

    &.pointer-disabled {
      pointer-events: none;
    }

    @media (min-width: 1276px) {
      transform: translate3d(0, 0, 0);
      transition: transform var(--column-transition);

      .is-right-column-shown & {
        transform: translate3d(calc(var(--right-column-width) * -1), 0, 0);
      }
    }

    .Button {
      margin-left: 0.25rem;
    }

    .toggle-right-pane-button {
      &.active {
        color: var(--color-primary);
        opacity: 1;
      }
    }
  }
}
