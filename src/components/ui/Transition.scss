.Transition {
  position: relative;

  --easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);
  --easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    animation-fill-mode: forwards !important;

    &:not(.active):not(.from):not(.to) {
      display: none !important; // Best performance when animating container
      //transform: scale(0); // Shortest initial delay
    }
  }

  /*
   * scroll-slide
   */

  &.scroll-slide {
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    flex-wrap: nowrap;

    > * {
      position: static;
      flex-shrink: 0;

      &:not(.active):not(.from):not(.to) {
        display: block !important;
        transform: scale(0);

        &.through {
          display: none !important;
        }
      }
    }
  }

  /*
   * slide
   */

  &.slide {
    > .to {
      transform: translateX(100%);
    }

    &.animating {
      > .from {
        animation: slide-out .3s ease-out;
      }

      > .to {
        animation: slide-in .3s ease-out;
      }
    }
  }

  &.slide.backwards {
    > .to {
      transform: translateX(-100%);
    }

    &.animating {
      > .from {
        animation: slide-in-backwards .3s ease-out;
      }

      > .to {
        animation: slide-out-backwards .3s ease-out;
      }
    }
  }

  /*
   * mv-slide
   */

  &.mv-slide {
    > * > div {
      animation-fill-mode: forwards !important;
    }

    > .to > div {
      transform: translateX(100vw);
    }

    &.animating {
      > .from > div {
        animation: mv-slide-out .4s ease;
      }

      > .to > div {
        animation: mv-slide-in .4s ease;
      }
    }
  }

  &.mv-slide.backwards {
    > .to > div {
      transform: translateX(-100vw);
    }

    &.animating {
      > .from > div {
        animation: mv-slide-in-backwards .4s ease;
      }

      > .to > div {
        animation: mv-slide-out-backwards .4s ease;
      }
    }
  }

  /*
   * slide-fade
   */
  &.slide-fade {
    > .from {
      transform-origin: left;
      transform: translateX(0);
      opacity: 1;
    }

    > .to {
      transform-origin: left;
      transform: translateX(1.5rem);
      opacity: 0;
    }

    &.animating {
      > .from {
        animation: fade-out-opacity .4s ease-out, slide-fade-out-move .4s;
      }

      > .to {
        animation: fade-in-opacity .4s var(--easeInSine), slide-fade-in-move .4s;
      }
    }
  }

  &.slide-fade.backwards {
    > .from {
      transform: translateX(0);
      opacity: 1;
    }

    > .to {
      transform: translateX(-1.5rem);
      opacity: 0;
    }

    &.animating {
      > .from {
        animation: fade-in-backwards-opacity .4s ease-out, slide-fade-in-backwards-move .4s;
      }

      > .to {
        animation: fade-out-backwards-opacity .4s var(--easeOutSine), slide-fade-out-backwards-move .4s;
      }
    }
  }

  /*
   * zoom-fade
   */
  &.zoom-fade {
    > .from {
      transform-origin: center;
      transform: scale(1);
      opacity: 1;
    }

    > .to {
      transform-origin: center;
      opacity: 0;
      // We can omit `transform: scale(1.1);` here because `opacity` is 0.
      // We need to for proper position calculation in `InfiniteScroll`.
    }

    &.animating {
      > .from {
        animation: fade-out-opacity .15s ease;
      }

      > .to {
        animation: fade-in-opacity .15s ease, zoom-fade-in-move .15s ease;
      }
    }
  }

  &.zoom-fade.backwards {
    > .from {
      transform: scale(1);
    }

    > .to {
      transform: scale(0.95);
    }

    &.animating {
      > .from {
        animation: fade-in-backwards-opacity .1s ease, zoom-fade-in-backwards-move .15s ease;
      }

      > .to {
        animation: fade-out-backwards-opacity .15s ease, zoom-fade-out-backwards-move .15s ease;
      }
    }
  }

  /*
   * fade
   */
  &.fade {
    > .from {
      opacity: 1;
    }

    > .to {
      opacity: 0;
    }

    &.animating {
      > .from {
        animation: fade-out-opacity .15s ease;
      }

      > .to {
        animation: fade-in-opacity .15s ease;
      }
    }
  }

  /*
   * slide-layers
   */

  &.slide-layers {
    --background-color: var(--color-white);
    background: black;

    > div {
      background: var(--background-color);
    }

    > .to {
      transform: translateX(100%);
    }

    &.animating {
      > .from {
        animation: slide-layers-out var(--layer-transition);
      }

      > .to {
        animation: slide-in var(--layer-transition);
      }
    }
  }

  &.slide-layers.backwards {
    > .to {
      transform: translateX(-20%);
      opacity: 0.75;
    }

    &.animating {
      > .from {
        animation: slide-in-backwards var(--layer-transition);
      }

      > .to {
        animation: slide-layers-out-backwards var(--layer-transition);
      }
    }
  }
}

/*
 * common
 */
@keyframes fade-in-opacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fade-out-opacity {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-in-backwards-opacity {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-out-backwards-opacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/*
 * slide
 */
@keyframes slide-in {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes slide-out {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

@keyframes slide-in-backwards {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes slide-out-backwards {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}

/*
 * mv-slide
 */
@keyframes mv-slide-in {
  0% {
    transform: translateX(100vw);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes mv-slide-out {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100vw);
  }
}

@keyframes mv-slide-in-backwards {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(100vw);
  }
}

@keyframes mv-slide-out-backwards {
  0% {
    transform: translateX(-100vw);
  }
  100% {
    transform: translateX(0);
  }
}

/*
 * slide-fade
 */
@keyframes slide-fade-in-move {
  0% {
    transform: translateX(1.5rem);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes slide-fade-out-move {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-1.5rem);
  }
}

@keyframes slide-fade-in-backwards-move {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(1.5rem);
  }
}

@keyframes slide-fade-out-backwards-move {
  0% {
    transform: translateX(-1.5rem);
  }
  100% {
    transform: translateX(0);
  }
}

/*
 * zoom-fade
 */
@keyframes zoom-fade-in-move {
  0% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes zoom-fade-in-backwards-move {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.1);
  }
}

@keyframes zoom-fade-out-backwards-move {
  0% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

/*
 * slide-layers
 */
@keyframes slide-layers-out {
  0% {
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-20%);
    opacity: calc(1 - var(--layer-blackout-opacity));
  }
}

@keyframes slide-layers-out-backwards {
  0% {
    transform: translateX(-20%);
    opacity: calc(1 - var(--layer-blackout-opacity));
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
